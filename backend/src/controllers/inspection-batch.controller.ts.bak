import { Controller, Get, Param, HttpException, HttpStatus, UseGuards } from '@nestjs/common';
import { ApiTags, ApiOperation, ApiParam, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';
import { JwtAuthGuard } from '../guards/jwt-auth.guard';
import { QualityHistoryService } from '../services/quality-history.service';

@ApiTags('검사 배치')
@Controller('inspection-batches')
@UseGuards(JwtAuthGuard)
@ApiBearerAuth()
export class InspectionBatchController {
  constructor(private readonly qualityHistoryService: QualityHistoryService) {}

  @Get(':id')
  @ApiOperation({ summary: '검사 배치 단일 조회', description: '배치 ID로 검사 배치 상세 정보를 조회합니다.' })
  @ApiParam({ name: 'id', description: '배치 ID', type: 'string' })
  @ApiResponse({ status: 200, description: '배치 정보를 성공적으로 조회했습니다.' })
  @ApiResponse({ status: 404, description: '배치를 찾을 수 없습니다.' })
  async getInspectionBatch(@Param('id') id: string) {
    const batch = await this.qualityHistoryService.getInspectionBatchById(Number(id));
    if (!batch) throw new HttpException('배치를 찾을 수 없습니다.', HttpStatus.NOT_FOUND);
    return batch;
  }
} 